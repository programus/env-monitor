version: '3'
services:
  db:
    image: ${DB_IMAGE}
    container_name: env-monitor-db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./db/init.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root-p4ssw0rd
      MYSQL_PASSWORD: 3nvRec
      MYSQL_DATABASE: envrec
      MYSQL_USER: envrec
      MYSQL_TCP_PORT: ${DB_PORT}
      MYSQL_UNIX_PORT: ${DB_PORT}
      TZ: ${TZ}
    healthcheck:
      test:  mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
  app:
    image: node
    container_name: env-monitor-app
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: envrec
      DB_USER: envrec
      DB_PASSWORD: 3nvRec
    depends_on:
      - db
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./monitor-service:/home/node/app
    networks:
      - backend
    restart: on-failure
    ports:
      - 3000:3000
    expose:
      - 3000
    command: sh -c "yarn && npx next build && npx next start"
networks:
  backend:
